<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
	<RootDir>$(teamcity_build_checkoutDir)</RootDir>
  </PropertyGroup>

  <UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="Split" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll"/>
  <UsingTask TaskName="NUnitTeamCity" AssemblyFile="$(agent_home_dir)/plugins/dotnetPlugin/bin/JetBrains.BuildServer.MSBuildLoggers.dll"/>

  <!-- ***************** Main build ***************** -->
  <PropertyGroup>
	<Solution>FLExBridge VS2010.sln</Solution>
	<ApplicationName>FLEx Bridge</ApplicationName>
	<Configuration>ReleaseMono</Configuration>
  </PropertyGroup>

  <Import Project="$(RootDir)/build/build.common.proj"/>

  <Target Name="Build" DependsOnTargets="DownloadFiles;Clean;CreateDirectories;SetAssemblyVersion;UnzipMercurial;Compile">
	<!-- CallTarget doesn't work well in xbuild.  Variable assignments don't pass out,
		 but it remembers not to call targets a second time via dependencies. -->
	<Message Text="Build Complete"/>
  </Target>

  <ItemGroup>
	<OutputFiles
		Include="$(RootDir)/output/$(Configuration)/**/*"
		Exclude="$(RootDir)/.hg/**/*;$(RootDir)/.git/**/*"
	/>
  </ItemGroup>
  <Target Name="Clean">
	<Message Text="Starting Clean"/>
	<Exec Command="find . -name obj -type d -print0 | xargs -0 rm -rf" WorkingDirectory="$(RootDir)" />
	<Delete Files="@(OutputFiles)" />
	<Message Text="End Clean"/>
  </Target>

  <Target Name="CreateDirectories">
	<MakeDir Directories="$(RootDir)/output/"/>
	<MakeDir Directories="$(RootDir)/output/$(Configuration)/"/>
	<MakeDir Directories="$(RootDir)/output/$(Configuration)/localizations/"/>
  </Target>

  <ItemGroup>
	<MyMercurialFiles Include="$(RootDir)\Mercurial\**\*.*"/>
	<MyMercurialExtensionFiles Include="$(RootDir)\MercurialExtensions\**\*.*"/>
  </ItemGroup>

  <Target Name="CopyMercurialFolders">
	<Copy SourceFiles="@(MyMercurialFiles)" DestinationFiles="@(MyMercurialFiles->'$(RootDir)/output/$(Configuration)\Mercurial\%(RecursiveDir)%(Filename)%(Extension)')"/>
	<Copy SourceFiles="@(MyMercurialExtensionFiles)" DestinationFiles="@(MyMercurialExtensionFiles->'$(RootDir)/output/$(Configuration)\MercurialExtensions\%(RecursiveDir)%(Filename)%(Extension)')"/>
  </Target>
  <Target Name="UnzipMercurial">
	<!-- Remember, Unix/Linux commands return 0 for success ("true") -->
	<Exec Command="/usr/bin/test `arch` = x86_64" ContinueOnError="true" IgnoreExitCode="true">
	  <Output TaskParameter="ExitCode" PropertyName="ZeroIf64BitCpu"/>
	</Exec>
	<Exec Command="/usr/bin/test `arch` = i686" ContinueOnError="true" IgnoreExitCode="true">
	  <Output TaskParameter="ExitCode" PropertyName="ZeroIf32BitCpu"/>
	</Exec>
	<!-- Extract the appropriate zip file. -->
	<Exec Command="/bin/rm -rf ../Mercurial" />
	<Exec Condition="'$(ZeroIf64BitCpu)'=='0'" Command="/usr/bin/unzip -uq $(RootDir)/lib/common/Mercurial-x86_64.zip -d $(RootDir)" />
	<Exec Condition="'$(ZeroIf32BitCpu)'=='0'" Command="/usr/bin/unzip -uq $(RootDir)/lib/common/Mercurial-i686.zip -d $(RootDir)" />
	<!-- Zip doesn't seem to retain the permission bits we need. -->
	<Exec Command="/bin/chmod +x $(RootDir)/Mercurial/hg*" ContinueOnError="true"/>
  </Target>

  <ItemGroup>
	<EnchantFiles Include="$(RootDir)/lib/common/Enchant.Net.dll*"/>
	<IcuDotNetFiles Include="$(RootDir)/lib/$(Configuration)/icu.net.dll*"/>
	<LocalizeFiles Include="$(RootDir)/DistFiles/localizations/*"/>
  </ItemGroup>

  <Target Name="CopyExtraFilesToOutput">
	<Copy SourceFiles="@(EnchantFiles)" DestinationFolder="$(RootDir)/output/$(Configuration)"/>
	<Copy SourceFiles="@(IcuDotNetFiles)" DestinationFolder="$(RootDir)/output/$(Configuration)"/>
	<Copy SourceFiles="@(LocalizeFiles)" DestinationFolder="$(RootDir)/output/$(Configuration)/localizations"/>
  </Target>

  <Target Name="Compile" DependsOnTargets="CopyExtraFilesToOutput">
	<MSBuild Projects="$(RootDir)/$(Solution)" Targets="Build" Properties="Configuration=$(Configuration)"/>
  </Target>

  <!-- ***************** Testing ***************** -->

  <Target Name="Test" DependsOnTargets="Build">
	<CreateItem Include="$(RootDir)/output/$(Configuration)/*Tests.dll">
	  <Output ItemName="TestAssemblies" TaskParameter="Include"/>
	</CreateItem>
	<NUnitTeamCity Assemblies="@(TestAssemblies)" ExcludeCategory="SkipOnTeamCity;UnknownMonoIssue" NUnitVersion="NUnit-2.5.5"/>
  </Target>

  <Target Name="Prepackaging" DependsOnTargets="CreateDirectories;VersionNumbers">
	<Message Text="Prepackaging fix version numbers: Version=$(Version)"/>
	<Copy SourceFiles="$(RootDir)\DistFiles\about.htm"
		  DestinationFolder="$(RootDir)\output\$(Configuration)"/>
	<FileUpdate File="$(RootDir)\output\$(Configuration)\about.htm"
				DatePlaceholder="DEV_RELEASE_DATE"
				Regex="DEV_VERSION_NUMBER" ReplacementText="$(Version)"/>
	<Copy SourceFiles="$(RootDir)\src\Installer\ReleaseNotes.md"
		  DestinationFolder="$(RootDir)\output\$(Configuration)"/>
	<FileUpdate File="$(RootDir)\output\$(Configuration)\ReleaseNotes.md"
				DatePlaceholder="DEV_RELEASE_DATE"
				Regex="DEV_VERSION_NUMBER" ReplacementText="$(Version)"/>
  </Target>

</Project>
